{"version":3,"sources":["../node_modules/morsey/dist/index.js","util.js","extend.js","pulsemap.js","index.js"],"names":["includes","target","search","every","elem","$","document","querySelector","slt","extend","morse","noiseGlyphes","replace","split","reduce","acc","curr","i","arr","pulsemap","config","factor","map","symbol","delay","Morsey","encoded","pulses","addEventListener","e","preventDefault","encode","value","innerHTML","window","navigator","vibrate"],"mappings":";;;AAAA;;ACAA;;ACAA,ADEA;;AEFA;;;;ADEA,AEFA;;AFIA,ACFA;;ACDA;AHQA,SAASA,QAAT,CAAmBC,MAAnB,EAAsC;AAAA,oCAARC,MAAQ;AAARA,UAAQ;AGPtC,ADEA,AFKsC;ACEtC,SAASO,MAAT,CAAiBC,KAAjB,EAAwB;AACtB,ADFA,MCEMC,GDFCT,OAAOC,KCEO,ADFd,CCEe,ADFF,GCEC,EAAM,GAAN,CAArB;ADFoB,WAAQF,OAAOD,QAAP,CAAgBI,IAAhB,CAAR;ACIpB,AEVF,AHMsB,GAAb,CGNHM,AHMJ,KCIOA,GEVK,GFUCE,CEVGa,MFUT,CAAc,KAAd,EAAqB,EEVhB,CFUL,CEVT,CFUmCZ,KAA1B,CAAgC,EAAhC,EAAoCC,MAApC,CAA2C,UAACC,GAAD,EAAMC,IAAN,EAAYC,CAAZ,EAAeC,GAAf,EAAuB;AACvE,ADJH,WCIU,oBAASP,YAAT,EAAuBK,IAAvB,EAA6BE,IAAID,IAAI,CAAR,CAA7B,IACHF,MAAMC,IAAN,GAAa,GADV,GAEHD,MAAMC,IAFV;AAGD,AEZH,GFQS,CERLU,CFYC,EAJI,CAAP,YERF;AFaC,AEZD,AHMA,IGNIC,AHMEtB,IAAI,SAAJA,CAAI,CGNV;ADKA,AFCU,SEDDc,AFCQb,QEDjB,CAAmBI,AFCOH,KED1B,EAAuC,MFCtB,CAAuBC,GAAvB,CAAP;AGJV,ADGuC,AFC7B,CAAV,KED0BY,MAAa,CCHrC,KFYaX,QEZf,EAAiBmB,gBAAjB,CAAkC,QAAlC,EAA4C,UAACC,CAAD,EAAO,eDGhB,EAAI;ACFrCA,IAAEC,cAAF;ADGA,MAAMT,EFGNrB,OEHeoB,IFGfpB,GEHsBqB,MAAP,IAAiB,IAAhC;ACDAK,QHKArB,IGLUK,AHKVL,MGLgB0B,MAAN,CAAa,aAAE,UAAF,EAAcC,KAA3B,CAAV;AACAL,ADEA,SAAO,ECFE,oBDEKjB,ICFIgB,CDEX,EAAcb,ICFZ,CDEF,CCFoB,ADEA,ECFEQ,ADEtB,EAAwBC,GAAxB,CAA4B,ECFE,GAAV,EAAlB,CAAT,EDEoCC,MAAD,EAAY;AAC7C,QAAIC,cAAJ;ACDF,eAAE,QAAF,EAAYS,SAAZ,GAAwBP,OAAxB;ADGE,YAAQH,MAAR;ACDFW,ADEI,SCFGC,EDEE,GAAL,ICFJ,CAAiBC,OAAjB,CAAyBT,MAAzB;AACD,ADEOH,CCXR,eDWgB,CAAR;AACA;AACF,WAAK,GAAL;AACEA,gBAAQ,CAAR;AACA;AACF,WAAK,GAAL;AACEA,gBAAQ,CAAR;AACA;AACF,WAAK,GAAL;AACEA,gBAAQ,CAAR;AACA;AACF,WAAK,GAAL;AACEA,gBAAQ,CAAR;AACA;AAfJ;;AAkBA,WAAOA,QAAQH,MAAf;AACD,GAtBM,CAAP;AAuBD;;kBAEcF","file":"src.6976e5c2.map","sourceRoot":"../src","sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Morsey=e():t.Morsey=e()}(this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},n.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=3)}([function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};e.hasDuplicateValues=function(t){if(\"object\"===(void 0===t?\"undefined\":r(t))){var e=Array.isArray(t)?t:Object.values(t);return new Set(e).size!==e.length}}},function(t,e){var n=9007199254740991,r=\"[object Arguments]\",o=\"[object Function]\",u=\"[object GeneratorFunction]\",i=/^(?:0|[1-9]\\d*)$/;var c,a,s=Object.prototype,f=s.hasOwnProperty,l=s.toString,p=s.propertyIsEnumerable,y=(c=Object.keys,a=Object,function(t){return c(a(t))});function v(t,e){var n=g(t)||function(t){return function(t){return function(t){return!!t&&\"object\"==typeof t}(t)&&O(t)}(t)&&f.call(t,\"callee\")&&(!p.call(t,\"callee\")||l.call(t)==r)}(t)?function(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}(t.length,String):[],o=n.length,u=!!o;for(var i in t)!e&&!f.call(t,i)||u&&(\"length\"==i||m(i,o))||n.push(i);return n}var d,b=function(t,e,n){for(var r=-1,o=Object(t),u=n(t),i=u.length;i--;){var c=u[d?i:++r];if(!1===e(o[c],c,o))break}return t};function h(t,e,n,r){return function(t,e){t&&b(t,e,M)}(t,function(t,o,u){e(r,n(t),o,u)}),r}function j(t){if(n=(e=t)&&e.constructor,r=\"function\"==typeof n&&n.prototype||s,e!==r)return y(t);var e,n,r,o=[];for(var u in Object(t))f.call(t,u)&&\"constructor\"!=u&&o.push(u);return o}function m(t,e){return!!(e=null==e?n:e)&&(\"number\"==typeof t||i.test(t))&&t>-1&&t%1==0&&t<e}var g=Array.isArray;function O(t){return null!=t&&function(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=n}(t.length)&&!function(t){var e=function(t){var e=typeof t;return!!t&&(\"object\"==e||\"function\"==e)}(t)?l.call(t):\"\";return e==o||e==u}(t)}var w,_,k,x=(w=function(t,e,n){t[e]=n},k=function(t){return t},_=function(){return k},function(t,e){return h(t,w,_(e),{})});function M(t){return O(t)?v(t):j(t)}t.exports=x},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.codes=e.characters=void 0;var r,o=n(1),u=(r=o)&&r.__esModule?r:{default:r};var i=e.characters={A:\"01\",B:\"1000\",C:\"1010\",D:\"100\",E:\"0\",F:\"0010\",G:\"110\",H:\"0000\",I:\"00\",J:\"0111\",K:\"101\",L:\"0100\",M:\"11\",N:\"10\",O:\"111\",P:\"0110\",Q:\"1101\",R:\"010\",S:\"000\",T:\"1\",U:\"001\",V:\"0001\",W:\"011\",X:\"1001\",Y:\"1011\",Z:\"1100\",0:\"11111\",1:\"01111\",2:\"00111\",3:\"00011\",4:\"00001\",5:\"00000\",6:\"10000\",7:\"11000\",8:\"11100\",9:\"11110\",\".\":\"010101\",\",\":\"110011\",\"?\":\"001100\",\"'\":\"011110\",\"!\":\"101011\",\"/\":\"10010\",\"(\":\"10110\",\")\":\"101101\",\"&\":\"01000\",\":\":\"111000\",\";\":\"101010\",\"=\":\"10001\",\"+\":\"01010\",\"-\":\"100001\",_:\"001101\",'\"':\"010010\",$:\"0001001\",\"@\":\"011010\",\"¿\":\"00101\",\"¡\":\"110001\",\"\\n\":\"0101\"};e.codes=(0,u.default)(i)},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=n(2),u=n(0);var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.options=Object.assign({long:\"-\",short:\"·\",space:\" \",wordspace:\"/\"},e)}return r(t,[{key:\"digitsToMarks\",value:function(t){var e=this;return t.replace(/[01]/g,function(t){return\"0\"===t?e.options.short:e.options.long})}},{key:\"marksToDigits\",value:function(t){var e=this,n=new RegExp(\"[\\\\\"+this.options.short+\"\\\\\"+this.options.long+\"]\",\"g\");return t.replace(n,function(t){return t===e.options.short?\"0\":\"1\"})}},{key:\"encode\",value:function(t){var e=this;if((0,u.hasDuplicateValues)(this.options))throw new Error(\"Options must have unique values\");return t.split(\"\").map(function(t){return\" \"===t?e.options.wordspace:e.digitsToMarks(o.characters[t.toUpperCase()])}).join(this.options.space)}},{key:\"decode\",value:function(t){var e=this;if((0,u.hasDuplicateValues)(this.options))throw new Error(\"Options must have unique values\");return t.split(this.options.wordspace).map(function(t){return t.split(e.options.space).map(function(t){return o.codes[e.marksToDigits(t)]}).join(\"\")}).join(\" \")}}]),t}();e.default=i}]).default});","'use strict'\n\n/**\n * Returns true if all search items are present in the target array\n * @method includes\n * @param  {Array}    target  The array to be searched\n * @param  {Array}    search  The search items\n * @return {Boolean}          True if all items present\n */\nfunction includes (target, ...search) {\n  return search.every(elem => target.includes(elem))\n}\n\nconst $ = slt => document.querySelector(slt)\n\nexport {\n  includes,\n  $\n}\n","'use strict'\n\nimport { includes } from './util'\n\n/**\n * Extends morse code; adds explicit 1-dot silence denoted by the '*' character\n * Also replaces ' / ' with '/'; extended morse code can be directly mapped to delays\n * @method extend\n * @param  {String} morse The original morse code\n * @return {String}       The extended morse code\n */\nfunction extend (morse) {\n  const noiseGlyphes = ['·', '-']\n\n  return morse.replace(' / ', '/').split('').reduce((acc, curr, i, arr) => {\n    return includes(noiseGlyphes, curr, arr[i + 1])\n      ? acc + curr + '*'\n      : acc + curr\n  }, '')\n}\n\nexport default extend\n","'use strict'\n\nimport extend from './extend.js'\n\n/**\n * Maps morse code to an array of pulses and delays\n * @method pulsemap\n * @param  {morse}  morse           Morse code that uses [.-/ ] as glyphes\n * @param  {Object} config          Configuation object\n * @param  {Number} [config.factor] Delay factor\n * @return {Array}                  Array of numbers denoting signals, in milliseconds\n */\nfunction pulsemap (morse, config = {}) {\n  const factor = config.factor || 1000\n\n  return extend(morse).split('').map((symbol) => {\n    let delay\n\n    switch (symbol) {\n      case '*':\n        delay = 1\n        break\n      case '·':\n        delay = 1\n        break\n      case '-':\n        delay = 3\n        break\n      case ' ':\n        delay = 3\n        break\n      case '/':\n        delay = 5\n        break\n    }\n\n    return delay * factor\n  })\n}\n\nexport default pulsemap\n","import Morsey from 'morsey'\nimport pulsemap from './pulsemap'\nimport { $ } from './util'\n\nconst morse = new Morsey()\n\nlet encoded\nlet pulses\n\n$('#morse-form').addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  encoded = morse.encode($('#message').value)\n  pulses = pulsemap(encoded, { factor: 500 })\n\n  $('#morse').innerHTML = encoded\n\n  window.navigator.vibrate(pulses)\n})\n"]}